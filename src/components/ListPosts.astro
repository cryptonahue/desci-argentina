---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from "astro:content";
/* import { LOCALES, useTranslations, type Lang } from "@/i18n"; */
import { type Lang } from "@/i18n";
import PostCard from '@/components/PostCard'
import { cn } from '@/utils'

type Props = {
	posts: CollectionEntry<'blog2'>[]
	FirstBig?: boolean
}

const { FirstBig = false } = Astro.props


const locale = Astro.currentLocale as Lang;
/* const t = useTranslations(locale); */

const posts = (await getCollection("blog2"))
  .filter((post) => post.slug.split("/")[0] === locale)
  .sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf());

---

<section
	class={cn(
		`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3  gap-8 mt-3`,
		FirstBig && `md:[&>*:first-child]:col-span-2`
	)}
>
	{
		posts.map(async (post) => {
			const { remarkPluginFrontmatter } = await post.render()

			return (
				<PostCard
					id={post.id}
					data={post.data}
					slug={post.slug}
					readTime={remarkPluginFrontmatter.minutesRead}
				/>
			)
		})
	}
</section>